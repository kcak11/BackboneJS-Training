<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Underscore Demo (Ashish)</title>
<script src="jslibs/jquery-1.11.3.js" type="text/javascript"></script>
<script src="jslibs/underscore.js" type="text/javascript"></script>
<script src="jslibs/backbone.js" type="text/javascript"></script>
<style type="text/css">
body{
	font-family:Verdana;
}
h1.heading{
	border-bottom:2px dashed #0000ff;
	display:inline-block;
	position:relative;
	top:-20px;
	left:10px;
}
h2.subheading{
	color:#0000ff;
	font-size:11px;
	position:relative;
	top:-35px;
}
.timeLeft{
	background-color:red;
	color:white;
}
</style>
</head>
<body>
	<img src="images/k-logo.png" style="width:50px"/><h1 class="heading">Backbone Demo</h1>
	<h2 id="myTime" class="subheading"></h2>
	<script type="text/javascript" src="timerscript/timer.js"></script>
	<script type="text/javascript">loadTimer(document.getElementById("myTime"),18,30,00);</script>
	<script>
		var Student=Backbone.Model.extend({
			validate:function(attrs){
				if(!attrs.name || attrs.name==""){
					return "Name cannot be empty";
				}
				if(isNaN(attrs.rollno)){
					return "Rollno must be an integer for "+attrs.name;
				}
				var chkValidMarks=function(marks){
					return marks>0 && marks<=100;					
				};
				if(!chkValidMarks(attrs.sub1)||!chkValidMarks(attrs.sub2)){
					return "Marks must be between 0 & 100 for "+attrs.name;	
				}
			},
			initialize:function(options){
				this.on("invalid",function(m,err){
					console.log(err);
				});
				//this.set({"name":options.name,"rollno":options.rollno,"sub1":options.sub1,"sub2":options.sub2},{validate:true});
				this.set({},{validate:true});
			},
			getTotal:function(){
				return parseFloat(this.get("sub1"))+parseFloat(this.get("sub2"));
			}
		});
		var s1=new Student({"name":"","rollno":"1","sub1":35,"sub2":70});
		var s2=new Student({"name":"Shaju","rollno":2,"sub1":70,"sub2":7});
		var s3=new Student({"name":"Ramesh","rollno":3,"sub1":45,"sub2":15});
		var s4=new Student({"name":"Rajesh","rollno":4,"sub1":45,"sub2":20});
		var s5=new Student({"name":"Srividhya","rollno":5,"sub1":45,"sub2":25});
		var students=[s1,s2,s3,s4,s5];
		var sub1Total=0;
		var sub2Total=0;
		_.each(students,function(stud){
			console.log(stud.get("name")+":\t\t\t\t sub1: "+stud.get("sub1")+" sub2: "+stud.get("sub2")+" total:"+stud.getTotal());
		});
		sub1Total=_.reduce(students,function(memo,val){
			return memo+val.get("sub1");			
		},0);
		sub2Total=_.reduce(students,function(memo,val){
			return memo+val.get("sub2");			
		},0);

		console.log("Average Sub1:"+sub1Total/_.size(students));
		console.log("Average Sub2:"+sub2Total/_.size(students));
	</script>
</body>
</html>